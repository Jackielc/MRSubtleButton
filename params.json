{"name":"MRSubtleButton","tagline":"A subtle gradient button derived from NSView.","body":"## MRSubtleButton\r\n\r\n[![Version](https://img.shields.io/cocoapods/v/MRSubtleButton.svg?style=flat)](http://cocoadocs.org/docsets/MRSubtleButton) [![Platform](https://img.shields.io/cocoapods/p/MRSubtleButton.svg?style=flat)](http://cocoadocs.org/docsets/MRSubtleButton)\r\n\r\nA subtle gradient button derived from NSView.\r\n\r\nHere are some examples using custom fonts and gradients:\r\n\r\n<img src=\"https://www.fidgetbox.co.uk/github/mrsubtlebutton.png\" alt=\"Button preview\" width=\"442\">\r\n\r\n## Usage\r\nMRSubtleButton can be integrated into an existing project using [CocoaPods](http://cocoapods.org). Simply add the necessary dependency to your `Podfile` as follows:\r\n\r\n```ruby\r\nplatform :osx, '10.7'\r\npod 'MRSubtleButton'\r\n...\r\n```\r\n\r\nRun `pod install` to install.\r\n\r\nNext, drag a custom view from the object library in Xcode into your UI, and change its class to `MRSubtleButton`.\r\n\r\nCreate an outlet for the button and give the button a title: `[button setTitle:@\"Hello World!\"]`.\r\n\r\n\r\n## Responding to events\r\nImplement the `MRSubtleButtonDelegate` protocol in your controller with the following method (don't forget to `#import <MRSubtleButton.h>` in your controller):\r\n\r\n```objc\r\n- (void)subtleButtonEvent:(NSEvent *)event with:(id)sender;\r\n```\r\n\r\nSet the button's delegate to your controller object: `[button setDelegate:self]`.\r\n\r\nDetermine the type of event that occured by inspecting the `event` object's `type` in your delegate method and respond accordingly:\r\n\r\n```objc\r\n- (void)subtleButtonEvent:(NSEvent *)event with:(id)sender\r\n{\r\n  if ([event type] == NSLeftMouseDown) {\r\n    // the left mouse button was pressed\r\n  }\r\n  else if ([event type] == NSLeftMouseUp) {\r\n    // the left mouse button was released\r\n  }\r\n}\r\n```\r\n\r\nIf you have more than one button with the same delegate you can determine which button generated the event by pointer comparison:\r\n\r\n```objc\r\nif (sender == [self button])\r\n{\r\n  // your button event implementation\r\n}\r\n```\r\n\r\n## Custom colours and fonts\r\nThe button's gradient and font attributes (both colour and size) can be adjusted.  Setting the button's gradient is as easy as specifying a start and end colour (the gradient starts at the bottom edge of the button):\r\n\r\n```objc\r\nNSColor *start = [NSColor colorWithCalibratedRed:205.0f/255.0f green:183.0f/255.0f blue:158.0f/255.0f alpha:1.0f];\r\nNSColor *end = [NSColor colorWithCalibratedRed:255.0f/255.0f green:239.0f/255.0f blue:213.0f/255.0f alpha:1.0f];\r\n\r\n[[self button] setGradientWithStartColor:start endColor:end];\r\n```\r\n\r\nA subtle gradient works best, with an end colour that is just a few shades lighter than the start colour.\r\n\r\nThe button's highlight gradient&mdash;shown momentarily when the button is clicked&mdash; can be adjusted using the following method:\r\n\r\n```objc\r\n(void)setHighlightGradientWithStartColor:(NSColor *)startColor endColor:(NSColor *)endColor;\r\n```\r\n \r\nAdjusting a button's font attributes is just as easy:\r\n\r\n```objc\r\nNSFont *buttonFont = [NSFont fontWithName:@\"Helvetica\" size:18.0f];\r\nNSColor *buttonFontColor = [NSColor colorWithCalibratedRed:139.0f/255.0f green:136.0f/255.0f blue:120.0f/255.0f alpha:1.0f]; \r\n    \r\n[[self button] setFontAttributesWithFont:buttonFont color:buttonFontColor];\r\n\r\n[[self button] setTitle:@\"Customised button\"];\r\n```\r\n\r\n## Title alignment\r\n\r\nControl the title text alignment using `setTitleAlignment:` and one of the three constants `MRLeftTitleAlignment`, `MRRightTitleAlignment` and `MRCenterTitleAlignment`:\r\n\r\n```objc\r\n[[self button] setTitleAlignment:MRCenterTitleAlignment];\r\n```\r\n\r\n## Caveats\r\nThe source code for `MRSubtleButton` uses Automatic Reference Counting and has been tested against 10.7 through 10.10 deployment targets.\r\n\r\n## License\r\n`MRSubtleButton` is provided under the terms of the [MIT License](http://opensource.org/licenses/mit-license.php).\r\n\r\n## Contact\r\nEmail me at [marc.ransome@fidgetbox.co.uk](mailto:marc.ransome@fidgetbox.co.uk) or tweet [@marcransome](http://www.twitter.com/marcransome).\r\n","google":"UA-31478860-1","note":"Don't delete this file! It's used internally to help with page regeneration."}